ls
cd HelloRobot 
ls
ls
cd HelloRobot 
ls
msrJnt.write
ls
msrJnt.write()
msrJnt.write(array)
ls
msrJnt
qut
ls
cd MW_servo 
ls
msrJnt.write(array())
msrJnt.write(array(1.0,1.0,1.0,1.0,1.0))
cd ..
ls
cd JointStatePublisher 
ls
msrJnt
stop
ls
nJoints = 5
ls
jointNames = array("joint0", "joint1", "joint2", "joint3", "joint4")
ls
ls
this
cd ..
this
cd JointStatePublisher 
ls
help
.services 
.provide marshalling
marshalling.writeProperties 
marshalling.writeProperties("test.xml")
array 
ls
cd JointStatePublisher 
ls
cd JointStatePublisher 
stop 
nJoints = 5
configure 
ls
cd JointStatePublisher 
stop
nJoints = 5
configure 
ls
.provide marshaler
.services 
.provide marshalling90
marshalling.writeProperties(test.xml)
marshalling.writeProperties("test.xml")
ls
cd JointStatePublisher 
ls
cd JointStatePublisher 
ls
q
cd JointStatePublisher 
ls
cd ..
cd MW_servo
msrJnt.write(array(1.0,1.0,1.0,1.0,1.0))
msrJnt.write(array(1.0,1.0,1.0,1.0,1.0))
cd MW_servo 
msrJnt.write(array(1.0,1.0,1.0,1.0,1.0))
msrJnt.write(array(1.0,1.0,1.0,1.0,1.0))
cd Test 
ls
l
ls
cd Test 
ls
cd Test 
ls
:q
ls
cd JointStatePublisher 
ls
cd ..
cd Test 
ls
ls
cd Test 
ls
ls
cd ..
ls
this.
this
.services 
cd Test 
ls
ls
cd Test 
ls
ls
stop
ls
cd Test 
stop
start
q
